// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`buildSearchConfig generates a reasonable filter map 1`] = `
Array [
  "dupe",
  "seasonaldupe",
  "dupelower",
  "count",
  "notes",
  "name",
  "description",
  "perk",
  "perkname",
  "keyword",
  "tagged",
  "tag",
  "hasnotes",
  "common",
  "uncommon",
  "rare",
  "legendary",
  "exotic",
  "white",
  "green",
  "blue",
  "purple",
  "yellow",
  "special",
  "primary",
  "heavy",
  "titan",
  "hunter",
  "warlock",
  "cosmetic",
  "light",
  "haslight",
  "haspower",
  "breaker",
  "kinetic",
  "arc",
  "solar",
  "void",
  "engrams",
  "lostitems",
  "messages",
  "specialorders",
  "class",
  "energy",
  "power",
  "seasonalartifacts",
  "helmet",
  "gauntlets",
  "chest",
  "leg",
  "classitem",
  "ghost",
  "clanbanners",
  "vehicle",
  "ships",
  "emblems",
  "finishers",
  "consumables",
  "modifications",
  "shaders",
  "autorifle",
  "handcannon",
  "pulserifle",
  "scoutrifle",
  "fusionrifle",
  "sniperrifle",
  "shotgun",
  "machinegun",
  "rocketlauncher",
  "sidearm",
  "sword",
  "grenadelauncher",
  "tracerifle",
  "linearfusionrifle",
  "submachine",
  "smg",
  "bow",
  "transmat",
  "weaponmod",
  "armormod",
  "reptoken",
  "powerfulreward",
  "source",
  "inloadout",
  "stack",
  "year",
  "level",
  "powerlimit",
  "masterwork",
  "energycapacity",
  "season",
  "sunsetsafter",
  "hascapacity",
  "armor2.0",
  "weapon",
  "armor",
  "equipment",
  "equippable",
  "postmaster",
  "inpostmaster",
  "equipped",
  "transferable",
  "movable",
  "stackable",
  "infusable",
  "infuse",
  "locked",
  "unlocked",
  "new",
  "randomroll",
  "curated",
  "shaded",
  "hasshader",
  "ornamented",
  "hasornament",
  "hasmod",
  "modded",
  "modslot",
  "holdsmod",
  "stat",
  "basestat",
  "maxstatloadout",
  "maxstatvalue",
  "maxbasestatvalue",
  "maxpower",
  "inleftchar",
  "inmiddlechar",
  "inrightchar",
  "onwrongclass",
  "invault",
  "incurrentchar",
  "id",
  "hash",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'freeform', keyword 'a' with suggestions [ 'b', 'c' ] 1`] = `
Array [
  "a:",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'query', keyword 'a' with suggestions [ 'b', 'c' ] 1`] = `
Array [
  "a:",
  "a:b",
  "a:c",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'query', keyword 'maxstatvalue' with suggestions [
  'mobility',  'resilience',
  'recovery',  'discipline',
  'intellect', 'strength',
  'total',     'custom',
  'any'
] 1`] = `
Array [
  "maxstatvalue:",
  "maxstatvalue:mobility",
  "maxstatvalue:resilience",
  "maxstatvalue:recovery",
  "maxstatvalue:discipline",
  "maxstatvalue:intellect",
  "maxstatvalue:strength",
  "maxstatvalue:total",
  "maxstatvalue:custom",
  "maxstatvalue:any",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'query', keyword 'maxstatvalue' with suggestions [
  'mobility',  'resilience',
  'recovery',  'discipline',
  'intellect', 'strength',
  'total',     'custom',
  'any'
] 2`] = `
Array [
  "maxstatvalue:",
  "maxstatvalue:mobility",
  "maxstatvalue:resilience",
  "maxstatvalue:recovery",
  "maxstatvalue:discipline",
  "maxstatvalue:intellect",
  "maxstatvalue:strength",
  "maxstatvalue:total",
  "maxstatvalue:custom",
  "maxstatvalue:any",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'range', keyword 'a' with suggestions [ 'b', 'c' ] 1`] = `
Array [
  "a:",
  "a:b:",
  "a:c:",
  "a:b:<",
  "a:c:<",
  "a:b:>",
  "a:c:>",
  "a:b:<=",
  "a:c:<=",
  "a:b:>=",
  "a:c:>=",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'range', keyword 'a' with suggestions undefined 1`] = `
Array [
  "a:",
  "a:<",
  "a:>",
  "a:<=",
  "a:>=",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'range', keyword 'stat' with suggestions [
  'rpm',             'rof',
  'charge',          'impact',
  'handling',        'range',
  'stability',       'reload',
  'magazine',        'aimassist',
  'equipspeed',      'velocity',
  'blastradius',     'recoildirection',
  'drawtime',        'zoom',
  'inventorysize',   'swingspeed',
  'guardefficiency', 'guardresistance',
  'chargerate',      'guardendurance',
  'ammocapacity',    'mobility',
  'resilience',      'recovery',
  'discipline',      'intellect',
  'strength',        'total',
  'custom',          'any'
] 1`] = `
Array [
  "stat:",
  "stat:rpm:",
  "stat:rof:",
  "stat:charge:",
  "stat:impact:",
  "stat:handling:",
  "stat:range:",
  "stat:stability:",
  "stat:reload:",
  "stat:magazine:",
  "stat:aimassist:",
  "stat:equipspeed:",
  "stat:velocity:",
  "stat:blastradius:",
  "stat:recoildirection:",
  "stat:drawtime:",
  "stat:zoom:",
  "stat:inventorysize:",
  "stat:swingspeed:",
  "stat:guardefficiency:",
  "stat:guardresistance:",
  "stat:chargerate:",
  "stat:guardendurance:",
  "stat:ammocapacity:",
  "stat:mobility:",
  "stat:resilience:",
  "stat:recovery:",
  "stat:discipline:",
  "stat:intellect:",
  "stat:strength:",
  "stat:total:",
  "stat:custom:",
  "stat:any:",
  "stat:rpm:<",
  "stat:rof:<",
  "stat:charge:<",
  "stat:impact:<",
  "stat:handling:<",
  "stat:range:<",
  "stat:stability:<",
  "stat:reload:<",
  "stat:magazine:<",
  "stat:aimassist:<",
  "stat:equipspeed:<",
  "stat:velocity:<",
  "stat:blastradius:<",
  "stat:recoildirection:<",
  "stat:drawtime:<",
  "stat:zoom:<",
  "stat:inventorysize:<",
  "stat:swingspeed:<",
  "stat:guardefficiency:<",
  "stat:guardresistance:<",
  "stat:chargerate:<",
  "stat:guardendurance:<",
  "stat:ammocapacity:<",
  "stat:mobility:<",
  "stat:resilience:<",
  "stat:recovery:<",
  "stat:discipline:<",
  "stat:intellect:<",
  "stat:strength:<",
  "stat:total:<",
  "stat:custom:<",
  "stat:any:<",
  "stat:rpm:>",
  "stat:rof:>",
  "stat:charge:>",
  "stat:impact:>",
  "stat:handling:>",
  "stat:range:>",
  "stat:stability:>",
  "stat:reload:>",
  "stat:magazine:>",
  "stat:aimassist:>",
  "stat:equipspeed:>",
  "stat:velocity:>",
  "stat:blastradius:>",
  "stat:recoildirection:>",
  "stat:drawtime:>",
  "stat:zoom:>",
  "stat:inventorysize:>",
  "stat:swingspeed:>",
  "stat:guardefficiency:>",
  "stat:guardresistance:>",
  "stat:chargerate:>",
  "stat:guardendurance:>",
  "stat:ammocapacity:>",
  "stat:mobility:>",
  "stat:resilience:>",
  "stat:recovery:>",
  "stat:discipline:>",
  "stat:intellect:>",
  "stat:strength:>",
  "stat:total:>",
  "stat:custom:>",
  "stat:any:>",
  "stat:rpm:<=",
  "stat:rof:<=",
  "stat:charge:<=",
  "stat:impact:<=",
  "stat:handling:<=",
  "stat:range:<=",
  "stat:stability:<=",
  "stat:reload:<=",
  "stat:magazine:<=",
  "stat:aimassist:<=",
  "stat:equipspeed:<=",
  "stat:velocity:<=",
  "stat:blastradius:<=",
  "stat:recoildirection:<=",
  "stat:drawtime:<=",
  "stat:zoom:<=",
  "stat:inventorysize:<=",
  "stat:swingspeed:<=",
  "stat:guardefficiency:<=",
  "stat:guardresistance:<=",
  "stat:chargerate:<=",
  "stat:guardendurance:<=",
  "stat:ammocapacity:<=",
  "stat:mobility:<=",
  "stat:resilience:<=",
  "stat:recovery:<=",
  "stat:discipline:<=",
  "stat:intellect:<=",
  "stat:strength:<=",
  "stat:total:<=",
  "stat:custom:<=",
  "stat:any:<=",
  "stat:rpm:>=",
  "stat:rof:>=",
  "stat:charge:>=",
  "stat:impact:>=",
  "stat:handling:>=",
  "stat:range:>=",
  "stat:stability:>=",
  "stat:reload:>=",
  "stat:magazine:>=",
  "stat:aimassist:>=",
  "stat:equipspeed:>=",
  "stat:velocity:>=",
  "stat:blastradius:>=",
  "stat:recoildirection:>=",
  "stat:drawtime:>=",
  "stat:zoom:>=",
  "stat:inventorysize:>=",
  "stat:swingspeed:>=",
  "stat:guardefficiency:>=",
  "stat:guardresistance:>=",
  "stat:chargerate:>=",
  "stat:guardendurance:>=",
  "stat:ammocapacity:>=",
  "stat:mobility:>=",
  "stat:resilience:>=",
  "stat:recovery:>=",
  "stat:discipline:>=",
  "stat:intellect:>=",
  "stat:strength:>=",
  "stat:total:>=",
  "stat:custom:>=",
  "stat:any:>=",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'rangeoverload', keyword 'a' with suggestions [ 'b', 'c' ] 1`] = `
Array [
  "a:",
  "a:<",
  "a:>",
  "a:<=",
  "a:>=",
  "a:",
  "a:b",
  "a:c",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'rangeoverload', keyword 'energycapacity' with suggestions [ 'any', 'arc', 'solar', 'void' ] 1`] = `
Array [
  "energycapacity:",
  "energycapacity:<",
  "energycapacity:>",
  "energycapacity:<=",
  "energycapacity:>=",
  "energycapacity:",
  "energycapacity:any",
  "energycapacity:arc",
  "energycapacity:solar",
  "energycapacity:void",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'undefined', keyword '[ 'a' ]' with suggestions undefined 1`] = `
Array [
  "is:a",
  "not:a",
]
`;

exports[`generateSuggestionsForFilter full suggestions for filter format 'undefined', keyword '[ 'a', 'b', 'c' ]' with suggestions undefined 1`] = `
Array [
  "is:a",
  "not:a",
  "is:b",
  "not:b",
  "is:c",
  "not:c",
]
`;
