import React, { useEffect, useState } from 'react';
import Confetti from 'react-confetti';

const useMouseClick = () => {
  const [clicked, setClicked] = useState(false);
  const [position, setPosition] = useState({
    x: 0,
    y: 0,
  });

  useEffect(() => {
    const clickHandler = (event: MouseEvent) => {
      setClicked(true);
      setPosition({
        x: event.pageX,
        y: event.pageY,
      });
      window.setTimeout(() => setClicked(false), 800);
    };

    document.body.addEventListener('click', clickHandler);

    return () => {
      document.body.removeEventListener('click', clickHandler);
    };
  }, []);

  return { clicked, position };
};

function drawShapes(ctx) {
  switch (Math.floor(Math.random() * 6)) {
    case 0:
      return drawSolar(ctx);
    case 1:
      return drawArc(ctx);
    case 2:
      return drawVoid(ctx);
    default:
      drawStar(ctx);
  }
}

export default function ConfettiClick() {
  const {
    clicked,
    position: { x, y },
  } = useMouseClick();

  return (
    <Confetti
      style={{ pointerEvents: 'none', zIndex: 999999 }}
      // initialVelocityY={8  }
      numberOfPieces={clicked ? 80 : 0}
      onConfettiComplete={(confetti) => confetti?.reset()}
      confettiSource={{ w: 0, h: 0, x, y }}
      drawShape={drawShapes}
    />
  );
}

function drawSolar(ctx) {
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(0, 0);
  ctx.lineTo(32, 0);
  ctx.lineTo(32, 32);
  ctx.lineTo(0, 32);
  ctx.closePath();
  ctx.clip();
  ctx.translate(0, 0);
  ctx.translate(0, 0);
  ctx.scale(0.75, 0.75);
  ctx.translate(0, 0);
  ctx.strokeStyle = 'rgba(0,0,0,0)';
  ctx.lineCap = 'butt';
  ctx.lineJoin = 'miter';
  ctx.miterLimit = 4;
  ctx.save();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#ef641f';
  ctx.beginPath();
  ctx.moveTo(16, 0);
  ctx.bezierCurveTo(16.048, 0.075, 16.251, 0.372, 16.352, 0.538);
  ctx.bezierCurveTo(19.036, 4.961, 21.939, 9.243, 24.765, 13.574);
  ctx.bezierCurveTo(25.916, 15.334999999999999, 26.968, 17.154, 27.521, 19.216);
  ctx.bezierCurveTo(28.5, 22.864, 27.642, 26.025000000000002, 25.036, 28.732);
  ctx.bezierCurveTo(23.713, 30.105, 22.191000000000003, 31.179, 20.387, 31.831);
  ctx.bezierCurveTo(20.242, 31.887999999999998, 20.073, 31.93, 19.897000000000002, 31.95);
  ctx.lineTo(19.888, 31.951);
  ctx.bezierCurveTo(20.568, 31.534, 21.155, 31.109, 21.707, 30.644000000000002);
  ctx.lineTo(21.685000000000002, 30.662000000000003);
  ctx.bezierCurveTo(
    24.740000000000002,
    28.003000000000004,
    25.349000000000004,
    24.345000000000002,
    23.317000000000004,
    20.833000000000002
  );
  ctx.bezierCurveTo(
    21.444000000000003,
    17.592000000000002,
    19.310000000000002,
    14.516000000000002,
    17.282000000000004,
    11.373000000000001
  );
  ctx.bezierCurveTo(
    16.868000000000002,
    10.736,
    16.466000000000005,
    10.096000000000002,
    16.052000000000003,
    9.448
  );
  ctx.bezierCurveTo(
    15.996000000000004,
    9.48,
    15.937000000000003,
    9.494,
    15.915000000000003,
    9.530000000000001
  );
  ctx.bezierCurveTo(
    13.533000000000003,
    13.330000000000002,
    10.921000000000003,
    16.977,
    8.684000000000003,
    20.866
  );
  ctx.bezierCurveTo(
    7.234000000000003,
    23.384999999999998,
    7.036000000000003,
    25.95,
    8.527000000000003,
    28.529
  );
  ctx.bezierCurveTo(9.304000000000002, 29.87, 10.419000000000002, 30.89, 11.737000000000002, 31.69);
  ctx.bezierCurveTo(
    11.867000000000003,
    31.768,
    12.031000000000002,
    31.803,
    12.135000000000002,
    32.001000000000005
  );
  ctx.bezierCurveTo(
    10.780000000000001,
    31.586000000000006,
    9.602000000000002,
    30.961000000000006,
    8.574000000000002,
    30.156000000000006
  );
  ctx.lineTo(8.598, 30.174000000000007);
  ctx.bezierCurveTo(
    6.688000000000001,
    28.700000000000006,
    5.16,
    26.936000000000007,
    4.461000000000001,
    24.570000000000007
  );
  ctx.bezierCurveTo(
    3.7140000000000013,
    22.04200000000001,
    4.158000000000001,
    19.622000000000007,
    5.186000000000001,
    17.269000000000005
  );
  ctx.bezierCurveTo(
    6.170000000000001,
    15.011000000000006,
    7.601000000000001,
    13.015000000000006,
    8.956000000000001,
    10.979000000000006
  );
  ctx.bezierCurveTo(
    11.267000000000001,
    7.503000000000006,
    13.536000000000001,
    4.002000000000006,
    15.722000000000001,
    0.4470000000000063
  );
  ctx.bezierCurveTo(
    15.804000000000002,
    0.31100000000000627,
    15.926000000000002,
    0.13300000000000628,
    16.003,
    0.0010000000000062736
  );
  ctx.closePath();
  ctx.fill();
  ctx.stroke();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#ef641f';
  ctx.beginPath();
  ctx.moveTo(16, 16.597);
  ctx.bezierCurveTo(16.807, 17.963, 17.562, 19.23, 18.306, 20.503);
  ctx.bezierCurveTo(18.95, 21.603, 19.618000000000002, 22.69, 20.16, 23.845);
  ctx.bezierCurveTo(21.103, 25.857999999999997, 20.531, 27.927999999999997, 18.67, 29.334);
  ctx.bezierCurveTo(16.963, 30.624, 14.789000000000001, 30.562, 13.148000000000001, 29.176);
  ctx.bezierCurveTo(
    11.340000000000002,
    27.651999999999997,
    10.911000000000001,
    25.604,
    12.015,
    23.516
  );
  ctx.bezierCurveTo(13.224, 21.229999999999997, 14.584, 19.032999999999998, 15.896, 16.807);
  ctx.bezierCurveTo(15.923, 16.762999999999998, 15.942, 16.715, 16, 16.596999999999998);
  ctx.closePath();
  ctx.fill();
  ctx.stroke();
  ctx.restore();
  ctx.restore();
}

function drawArc(ctx) {
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(0, 0);
  ctx.lineTo(32, 0);
  ctx.lineTo(32, 32);
  ctx.lineTo(0, 32);
  ctx.closePath();
  ctx.clip();
  ctx.translate(0, 0);
  ctx.translate(0, 0);
  ctx.scale(0.75, 0.75);
  ctx.translate(0, 0);
  ctx.st = 'rgba(0,0,0,0)';
  ctx.lineCap = 'butt';
  ctx.lineJoin = 'miter';
  ctx.miterLimit = 4;
  ctx.save();
  ctx.restore();
  ctx.save();
  ctx.fillStyle = '#79bbe7';
  ctx.beginPath();
  ctx.moveTo(15.012, 31.479);
  ctx.bezierCurveTo(15.012, 29.564, 15.012, 27.764, 15.012, 25.963);
  ctx.bezierCurveTo(15.012, 24.629, 14.874, 24.536, 13.729000000000001, 25.166);
  ctx.quadraticCurveTo(9.878, 27.284, 6.038000000000001, 29.414);
  ctx.bezierCurveTo(5.308000000000002, 29.817, 4.501000000000001, 29.96, 3.689000000000001, 30.07);
  ctx.bezierCurveTo(
    2.487000000000001,
    30.234,
    1.285000000000001,
    30.391000000000002,
    8.881784197001252e-16,
    30.351
  );
  ctx.bezierCurveTo(
    0.1560000000000009,
    30.037,
    0.4370000000000009,
    29.913999999999998,
    0.6300000000000009,
    29.721
  );
  ctx.bezierCurveTo(
    1.774000000000001,
    28.628,
    2.9410000000000007,
    27.555,
    4.081000000000001,
    26.456
  );
  ctx.bezierCurveTo(
    5.877000000000002,
    24.724999999999998,
    7.654000000000002,
    22.976,
    9.448,
    21.243
  );
  ctx.bezierCurveTo(
    9.700000000000001,
    20.999,
    9.649000000000001,
    20.892999999999997,
    9.363,
    20.744
  );
  ctx.bezierCurveTo(
    7.3629999999999995,
    19.703,
    5.428999999999999,
    18.529,
    3.3729999999999993,
    17.604
  );
  ctx.bezierCurveTo(
    2.185999999999999,
    17.070999999999998,
    1.3479999999999994,
    16.182,
    0.6229999999999993,
    15.126999999999999
  );
  ctx.bezierCurveTo(
    0.8419999999999993,
    14.998,
    1.0239999999999994,
    15.049,
    1.1979999999999993,
    15.047999999999998
  );
  ctx.bezierCurveTo(
    2.927999999999999,
    15.047999999999998,
    4.656999999999999,
    15.055999999999997,
    6.387,
    15.047999999999998
  );
  ctx.bezierCurveTo(
    7.327999999999999,
    15.047999999999998,
    7.459,
    14.838999999999999,
    7.018999999999999,
    14.031999999999998
  );
  ctx.bezierCurveTo(
    5.598999999999999,
    11.429999999999998,
    4.177999999999999,
    8.825,
    2.719999999999999,
    6.244999999999998
  );
  ctx.bezierCurveTo(
    2.266999999999999,
    5.441999999999998,
    2.097999999999999,
    4.581999999999998,
    1.9759999999999989,
    3.701999999999998
  );
  ctx.bezierCurveTo(
    1.809999999999999,
    2.506999999999998,
    1.640999999999999,
    1.307999999999998,
    1.714999999999999,
    0.010999999999998344
  );
  ctx.bezierCurveTo(
    2.279999999999999,
    0.6029999999999983,
    2.794999999999999,
    1.1319999999999983,
    3.297999999999999,
    1.6719999999999984
  );
  ctx.quadraticCurveTo(7.001999999999999, 5.6469999999999985, 10.818999999999999, 9.511);
  ctx.bezierCurveTo(11.132, 9.828, 11.232999999999999, 9.742999999999999, 11.408, 9.402);
  ctx.bezierCurveTo(12.466, 7.35, 13.665, 5.371999999999999, 14.632, 3.2699999999999996);
  ctx.bezierCurveTo(
    15.134,
    2.1769999999999996,
    16.052,
    1.4679999999999995,
    16.994,
    0.7659999999999996
  );
  ctx.bezierCurveTo(
    17.134999999999998,
    0.9759999999999995,
    17.079,
    1.1599999999999997,
    17.079,
    1.3329999999999995
  );
  ctx.bezierCurveTo(
    17.079,
    3.0809999999999995,
    17.079,
    4.829999999999999,
    17.079,
    6.577999999999999
  );
  ctx.bezierCurveTo(17.079, 7.536, 17.244, 7.645999999999999, 18.077, 7.1899999999999995);
  ctx.quadraticCurveTo(22.004, 5.045, 25.916000000000004, 2.8709999999999996);
  ctx.bezierCurveTo(
    26.650000000000006,
    2.4599999999999995,
    27.446000000000005,
    2.2879999999999994,
    28.250000000000004,
    2.1789999999999994
  );
  ctx.bezierCurveTo(
    29.257000000000005,
    2.0449999999999995,
    30.271000000000004,
    1.9599999999999993,
    31.284000000000002,
    1.8659999999999994
  );
  ctx.bezierCurveTo(
    31.493000000000002,
    1.8459999999999994,
    31.706000000000003,
    1.8659999999999994,
    32,
    1.8659999999999994
  );
  ctx.bezierCurveTo(
    31.724,
    2.3289999999999993,
    31.371,
    2.5859999999999994,
    31.062,
    2.8729999999999993
  );
  ctx.quadraticCurveTo(26.846, 6.799999999999999, 22.75, 10.849);
  ctx.bezierCurveTo(22.395, 11.202, 22.43, 11.342, 22.859, 11.567);
  ctx.bezierCurveTo(24.891000000000002, 12.625, 26.854000000000003, 13.814, 28.942, 14.766);
  ctx.bezierCurveTo(29.932, 15.216, 30.621, 16.026, 31.265, 16.87);
  ctx.bezierCurveTo(31.326, 16.95, 31.432000000000002, 17.044, 31.361, 17.157);
  ctx.bezierCurveTo(31.29, 17.27, 31.128, 17.229, 31.009, 17.229);
  ctx.quadraticCurveTo(28.413, 17.229, 25.819, 17.229);
  ctx.bezierCurveTo(25.619, 17.229, 25.419, 17.237, 25.218, 17.239);
  ctx.bezierCurveTo(24.773, 17.239, 24.661, 17.468, 24.854, 17.838);
  ctx.quadraticCurveTo(25.535999999999998, 19.149, 26.247, 20.434);
  ctx.bezierCurveTo(27.308, 22.363, 28.383, 24.282, 29.439, 26.214000000000002);
  ctx.bezierCurveTo(29.985, 27.213, 30.045, 28.337000000000003, 30.191, 29.431);
  ctx.bezierCurveTo(30.282999999999998, 30.024, 30.336, 30.709, 30.336, 31.405);
  ctx.bezierCurveTo(
    30.336,
    31.601000000000003,
    30.331999999999997,
    31.796,
    30.323999999999998,
    31.990000000000002
  );
  ctx.lineTo(30.325, 31.962000000000003);
  ctx.bezierCurveTo(
    29.887999999999998,
    31.587000000000003,
    29.368,
    31.186000000000003,
    28.905,
    30.721000000000004
  );
  ctx.bezierCurveTo(
    28.088,
    29.893000000000004,
    27.322000000000003,
    29.013000000000005,
    26.513,
    28.176000000000002
  );
  ctx.bezierCurveTo(
    24.765,
    26.369000000000003,
    23.003,
    24.580000000000002,
    21.261000000000003,
    22.771
  );
  ctx.bezierCurveTo(20.966, 22.466, 20.824, 22.443, 20.605000000000004, 22.852);
  ctx.bezierCurveTo(
    19.584000000000003,
    24.819,
    18.427000000000003,
    26.719,
    17.518000000000004,
    28.752000000000002
  );
  ctx.bezierCurveTo(
    17.013000000000005,
    29.897000000000002,
    16.124000000000006,
    30.705000000000002,
    15.013000000000005,
    31.478
  );
  ctx.closePath();
  ctx.moveTo(16.02, 13.082);
  ctx.bezierCurveTo(15.924, 13.164000000000001, 15.838, 13.226, 15.763, 13.301);
  ctx.bezierCurveTo(14.925, 14.137, 14.096, 14.982, 13.25, 15.806000000000001);
  ctx.bezierCurveTo(12.998, 16.05, 13.047, 16.206, 13.273, 16.427);
  ctx.quadraticCurveTo(14.503, 17.628999999999998, 15.705, 18.861);
  ctx.bezierCurveTo(15.924, 19.087, 16.068, 19.137, 16.315, 18.882);
  ctx.bezierCurveTo(17.137, 18.03, 17.978, 17.198, 18.828000000000003, 16.369);
  ctx.bezierCurveTo(
    19.020000000000003,
    16.18,
    19.059000000000005,
    16.062,
    18.842000000000002,
    15.852
  );
  ctx.bezierCurveTo(17.980000000000004, 15.015, 17.137, 14.157, 16.287000000000003, 13.308);
  ctx.bezierCurveTo(
    16.205000000000002,
    13.238,
    16.121000000000002,
    13.174,
    16.019000000000002,
    13.084999999999999
  );
  ctx.closePath();
  ctx.fill();
  ctx.stroke();
  ctx.restore();
  ctx.restore();
}

function drawVoid(ctx) {
  ctx.save();
  ctx.beginPath();
  ctx.moveTo(0, 0);
  ctx.lineTo(32, 0);
  ctx.lineTo(32, 32);
  ctx.lineTo(0, 32);
  ctx.closePath();
  ctx.clip();
  ctx.translate(0, 0);
  ctx.translate(0, 0);
  ctx.scale(0.75, 0.75);
  ctx.translate(0, 0);
  ctx.strokeStyle = 'rgba(0,0,0,0)';
  ctx.lineCap = 'butt';
  ctx.lineJoin = 'miter';
  ctx.miterLimit = 4;
  ctx.save();
  ctx.restore();
  ctx.save();
  ctx.save();
  ctx.fillStyle = '#a371c2';
  ctx.beginPath();
  ctx.moveTo(16, 0);
  ctx.bezierCurveTo(7.16, 0, 0, 7.16, 0, 16);
  ctx.bezierCurveTo(0, 24.84, 7.16, 32, 16, 32);
  ctx.bezierCurveTo(24.84, 32, 32, 24.84, 32, 16);
  ctx.bezierCurveTo(32, 7.16, 24.84, 0, 16, 0);
  ctx.closePath();
  ctx.moveTo(10.74, 3.18);
  ctx.bezierCurveTo(11.620000000000001, 2.7800000000000002, 12.55, 2.5, 13.52, 2.3400000000000003);
  ctx.bezierCurveTo(14.48, 2.16, 15.41, 2.1100000000000003, 16.39, 2.1100000000000003);
  ctx.bezierCurveTo(
    17.36,
    2.1300000000000003,
    18.35,
    2.2700000000000005,
    19.32,
    2.5400000000000005
  );
  ctx.bezierCurveTo(
    20.28,
    2.8100000000000005,
    21.25,
    3.2800000000000002,
    22.05,
    3.8200000000000003
  );
  ctx.bezierCurveTo(23.69, 4.9, 25.1, 6.36, 26.05, 8.100000000000001);
  ctx.bezierCurveTo(27.01, 9.850000000000001, 27.45, 11.810000000000002, 27.47, 13.71);
  ctx.bezierCurveTo(
    27.49,
    15.610000000000001,
    27.15,
    17.51,
    26.349999999999998,
    19.240000000000002
  );
  ctx.bezierCurveTo(25.929999999999996, 20.090000000000003, 25.4, 20.89, 24.74, 21.55);
  ctx.bezierCurveTo(24.069999999999997, 22.21, 23.259999999999998, 22.71, 22.4, 22.98);
  ctx.bezierCurveTo(23.13, 22.46, 23.74, 21.82, 24.2, 21.11);
  ctx.bezierCurveTo(24.65, 20.39, 24.99, 19.62, 25.189999999999998, 18.8);
  ctx.bezierCurveTo(
    25.639999999999997,
    17.19,
    25.669999999999998,
    15.48,
    25.479999999999997,
    13.84
  );
  ctx.bezierCurveTo(
    25.279999999999998,
    12.2,
    24.789999999999996,
    10.64,
    23.959999999999997,
    9.309999999999999
  );
  ctx.bezierCurveTo(
    23.139999999999997,
    7.969999999999999,
    21.99,
    6.8199999999999985,
    20.659999999999997,
    5.959999999999999
  );
  ctx.bezierCurveTo(
    19.979999999999997,
    5.509999999999999,
    19.339999999999996,
    5.1899999999999995,
    18.589999999999996,
    4.959999999999999
  );
  ctx.bezierCurveTo(
    17.859999999999996,
    4.719999999999999,
    17.079999999999995,
    4.589999999999999,
    16.279999999999998,
    4.529999999999999
  );
  ctx.bezierCurveTo(
    15.489999999999998,
    4.47,
    14.629999999999997,
    4.4799999999999995,
    13.829999999999998,
    4.569999999999999
  );
  ctx.bezierCurveTo(
    13.029999999999998,
    4.6499999999999995,
    12.239999999999998,
    4.8,
    11.459999999999997,
    5.06
  );
  ctx.bezierCurveTo(8.329999999999998, 6.05, 5.579999999999997, 8.35, 3.559999999999997, 11.3);
  ctx.bezierCurveTo(4.62, 7.86, 7.21, 4.75, 10.74, 3.18);
  ctx.closePath();
  ctx.moveTo(21.88, 16);
  ctx.bezierCurveTo(21.88, 19.25, 19.25, 21.88, 16, 21.88);
  ctx.bezierCurveTo(12.75, 21.88, 10.120000000000001, 19.25, 10.120000000000001, 16);
  ctx.bezierCurveTo(10.120000000000001, 12.75, 12.75, 10.120000000000001, 16, 10.120000000000001);
  ctx.bezierCurveTo(19.25, 10.12, 21.88, 12.75, 21.88, 16);
  ctx.closePath();
  ctx.moveTo(20.77, 28.38);
  ctx.bezierCurveTo(19.89, 28.779999999999998, 18.96, 29.06, 17.99, 29.22);
  ctx.bezierCurveTo(17.029999999999998, 29.4, 16.099999999999998, 29.45, 15.119999999999997, 29.45);
  ctx.bezierCurveTo(
    14.149999999999997,
    29.43,
    13.159999999999997,
    29.29,
    12.189999999999998,
    29.02
  );
  ctx.bezierCurveTo(11.229999999999997, 28.75, 10.259999999999998, 28.28, 9.459999999999997, 27.74);
  ctx.bezierCurveTo(
    7.819999999999998,
    26.659999999999997,
    6.4099999999999975,
    25.2,
    5.459999999999997,
    23.459999999999997
  );
  ctx.bezierCurveTo(
    4.499999999999997,
    21.709999999999997,
    4.059999999999997,
    19.749999999999996,
    4.039999999999997,
    17.849999999999998
  );
  ctx.bezierCurveTo(
    4.019999999999998,
    15.949999999999998,
    4.359999999999998,
    14.049999999999997,
    5.1599999999999975,
    12.319999999999997
  );
  ctx.bezierCurveTo(
    5.579999999999997,
    11.469999999999997,
    6.109999999999998,
    10.669999999999996,
    6.769999999999998,
    10.009999999999996
  );
  ctx.bezierCurveTo(
    7.439999999999998,
    9.349999999999996,
    8.249999999999998,
    8.849999999999996,
    9.109999999999998,
    8.579999999999997
  );
  ctx.bezierCurveTo(
    8.379999999999997,
    9.099999999999996,
    7.769999999999998,
    9.739999999999997,
    7.309999999999998,
    10.449999999999996
  );
  ctx.bezierCurveTo(
    6.859999999999998,
    11.169999999999996,
    6.519999999999998,
    11.939999999999996,
    6.319999999999998,
    12.759999999999996
  );
  ctx.bezierCurveTo(
    5.869999999999997,
    14.369999999999996,
    5.839999999999998,
    16.079999999999995,
    6.029999999999998,
    17.719999999999995
  );
  ctx.bezierCurveTo(
    6.229999999999998,
    19.359999999999996,
    6.719999999999997,
    20.919999999999995,
    7.549999999999997,
    22.249999999999996
  );
  ctx.bezierCurveTo(
    8.369999999999997,
    23.589999999999996,
    9.519999999999998,
    24.739999999999995,
    10.849999999999998,
    25.599999999999998
  );
  ctx.bezierCurveTo(
    11.529999999999998,
    26.049999999999997,
    12.169999999999998,
    26.369999999999997,
    12.919999999999998,
    26.599999999999998
  );
  ctx.bezierCurveTo(
    13.649999999999999,
    26.839999999999996,
    14.429999999999998,
    26.97,
    15.229999999999999,
    27.029999999999998
  );
  ctx.bezierCurveTo(16.02, 27.089999999999996, 16.88, 27.08, 17.68, 26.99);
  ctx.bezierCurveTo(18.48, 26.91, 19.27, 26.759999999999998, 20.05, 26.5);
  ctx.bezierCurveTo(23.18, 25.51, 25.93, 23.21, 27.950000000000003, 20.259999999999998);
  ctx.bezierCurveTo(26.9, 23.69, 24.31, 26.8, 20.77, 28.38);
  ctx.closePath();
  ctx.fill();
  ctx.stroke();
  ctx.restore();
  ctx.restore();
  ctx.restore();
}

function drawStar(ctx) {
  const numPoints = Math.random() * 2 + 4;
  const outerRadius = 12;
  const innerRadius = outerRadius / 2;
  ctx.beginPath();
  ctx.moveTo(0, 0 - outerRadius);
  ctx.scale(0.75, 0.75);

  for (let n = 1; n < numPoints * 2; n++) {
    const radius = n % 2 === 0 ? outerRadius : innerRadius;
    const x = radius * Math.sin((n * Math.PI) / numPoints);
    const y = -1 * radius * Math.cos((n * Math.PI) / numPoints);
    ctx.lineTo(x, y);
  }
  ctx.fill();
  ctx.closePath();
}
